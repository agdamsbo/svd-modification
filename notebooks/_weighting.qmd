
```{r setup}
source(here::here("R/functions.R"))
```


```{r}
ds <- get_vars(targets::tar_read("df_complete"), vars.groups = "poster")
mod <- gam(simple_score ~ s(age) + female_sex + pase_0_high + alone + smoker + hyperten + diabetes + ais + afib,
  data = ds, family = "binomial"
)

plot(mod,
  shade = TRUE,
  main = "Non-linear function of age in treatment propensity"
)
```


```{r}
ds <- get_vars(targets::tar_read("df_complete"), vars.groups = "poster") |>
  # dplyr::filter(!is.na(simple_score),!is.na(pase_0_high))|>
  na.omit() |>
  dplyr::mutate(simple_score = factor(simple_score))
```

Det har stor betydning, hvilken variabel, der udvælges til vægtning.

```{r}
mod <- ds |>
  (\(.x){
    mgcv::gam(pase_0_high ~ s(age) + female_sex + alone + smoker + hyperten + diabetes + ais + afib,
      data = .x,
      family = "binomial"
    )
  })()

mod |> plot(shade=TRUE,
  main = "Non-linear function of age in PASE propensity")

ds <- ds |> dplyr::mutate(
  propensity_gam = predict(mod, type = "response"),
  weight_gam = 1 / propensity_gam * pase_0_high +
    1 / (1 - propensity_gam) * (1 - pase_0_high)
)
```


```{r}
require(ggplot2)
ggplot(ds, aes(x = weight_gam, fill = pase_0_high)) +
  geom_density(alpha = 0.5, colour = "grey50") +
  geom_rug() +
  scale_x_log10(breaks = c(1, 5, 10, 20, 40)) +
  ggtitle("Distribution of inverse probability weights")
```


```{r}
ds |> skimr::skim()
```


```{r}
ds$id <- seq_len(nrow(ds))

library(survey)
options(survey.lonely.psu = "adjust")
options(survey.adjust.domain.lonely = TRUE)

dclus2 <- svydesign(id = ~id, data = ds, weights = ~weight_gam)

mod.olr <- svyolr(simple_score ~ pase_0_high + age + female_sex + alone + smoker + hyperten + diabetes + ais + afib,
  design = dclus2
)
```


```{r}
mod.olr|>
  gtsummary::tbl_regression(
    show_single_row = dplyr::where(is.logical),
    exponentiate = TRUE
  ) |>
  gtsummary::add_global_p() |> 
  fix_labels()
```
